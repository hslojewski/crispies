{"ast":null,"code":"var _jsxFileName = \"/Users/heidi.slojewski/Desktop/effective-parakeet/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from \"react-router-dom\";\nimport moment from 'moment';\nimport './App.scss';\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport Content from './Content';\nimport Drawing from './Drawing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst React = require('react'),\n  {\n    useState,\n    useEffect\n  } = require('react');\nconst App = () => {\n  _s();\n  var [tags, setTags] = useState({\n    tools: {},\n    skills: {},\n    affiliations: {},\n    roles: {}\n  });\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [activeTags, setActiveTags] = useState([]);\n  const [colorMode, setColorMode] = useState(\"light\");\n  const [season, setSeason] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"AND\");\n  const [tagAccordions, setTagAccordions] = useState({\n    tools: false,\n    skills: false,\n    affiliations: false,\n    roles: false\n  });\n  const [isNavVisible, setNavVisibility] = useState(false);\n  var initializeSeason = () => {\n    // // debugger;\n    // const date = new Date('2017-4-28');\n    // const start = new Date('2017-4-20');\n    // const end = new Date('2017-5-16');\n    const springBegins = 2; // March\n    const summerBegins = 4; // May\n    const autumnBegins = 6; // July\n    // const winterBegins = 11;\n    // // console.log(\"month: \"+moment().month());\n\n    const currentMonth = moment().month();\n    if (currentMonth <= springBegins) {\n      setSeason(\"winter\");\n    } else if (currentMonth <= summerBegins) {\n      setSeason(\"spring\");\n    } else if (currentMonth <= autumnBegins) {\n      setSeason(\"summer\");\n    } else {\n      setSeason(\"autumn\");\n    }\n  };\n  var initializeColorMode = () => {\n    var localTimeHour = parseInt(moment().local().format(\"H\"));\n    setColorMode(localTimeHour > 6 && localTimeHour < 18 ? \"light\" : \"dark\");\n  };\n  var toggleColorMode = () => {\n    colorMode === \"light\" ? setColorMode('dark') : setColorMode('light');\n  };\n  var getTags = projects => {\n    tags = {\n      tools: {},\n      skills: {},\n      affiliations: {},\n      roles: {}\n    };\n    var blahProjects = projects;\n    if (Object.keys(allProjects).length) {\n      blahProjects = allProjects;\n    }\n    Object.keys(blahProjects).forEach(projectId => {\n      var project = blahProjects[projectId];\n      ['tools', 'skills', 'affiliations', 'roles'].forEach(tagType => {\n        // ['tools', 'affiliations'].forEach(tagType => {\n        // ['affiliations'].forEach(tagType => {\n        // debugger;\n        if (project[tagType]) {\n          project[tagType].forEach(projectTag => {\n            // console.log(projects);\n            // debugger;\n            // if (projectTag in tags[tagType]) {\n            //   tags[tagType][projectTag]++;\n            // } else {\n            //   if (projects[projectId]) {\n            //     tags[tagType][projectTag] = 1;\n            //   } else {\n            //     tags[tagType][projectTag] = 0;\n            //   }\n            //   debugger;\n            // }\n            // console.log(projectId);\n            // if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n            //   debugger;\n            // }\n\n            if (projects[projectId]) {\n              if (projectTag in tags[tagType]) {\n                tags[tagType][projectTag]++;\n              } else {\n                tags[tagType][projectTag] = 1;\n              }\n            } else {\n              // debugger;\n              if (!tags[tagType][projectTag]) {\n                // debugger;\n                tags[tagType][projectTag] = 0;\n              }\n              ;\n            }\n          });\n        }\n        ;\n      });\n    });\n    // console.log(tags);\n    // debugger;\n    setTags({\n      ...tags\n    });\n  };\n  var getProjectsAndTags = () => {\n    var projectsListPath = `${process.env.PUBLIC_URL}/projects_list.json`;\n    fetch(projectsListPath).then(response => {\n      return response.json();\n    }).then(result => {\n      setAllProjects(result);\n      setProjects(result);\n      getTags(result);\n    }).catch(e => {\n      // console.log(e.message);\n    });\n  };\n  var getProjectData = projId => {\n    var projPath = `${process.env.PUBLIC_URL}/projects/${projId}.json`;\n    fetch(projPath).then(response => {\n      return response.json();\n    }).then(result => {\n      setProjectData(result);\n    }).catch(e => {\n      // console.log(e.message);\n    });\n  };\n  var updateProjectsList = activeTags => {\n    // console.log(projects);\n    // console.log(activeTags);\n    // // debugger;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(allProjects).forEach(projectPath => {\n          var tools = allProjects[projectPath].tools || [],\n            skills = allProjects[projectPath].skills || [],\n            affiliations = allProjects[projectPath].affiliations || [],\n            roles = allProjects[projectPath].roles || [],\n            tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n          projectsToDisplay = projectsToDisplay.filter(project => {\n            if (!projectsToIgnore.includes(project)) {\n              return project;\n            }\n          });\n        });\n      });\n      var blah = {};\n      projectsToDisplay.forEach(a => {\n        blah[a] = allProjects[a];\n      });\n      getTags(blah);\n      setProjects(blah);\n      // debugger;\n    } else {\n      getTags(allProjects);\n      setProjects(allProjects);\n    }\n  };\n  var displayProjects = tag => {\n    var updatedActiveTags = activeTags;\n    if (activeTags.includes(tag)) {\n      // // debugger;\n      // setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\n      updatedActiveTags = activeTags.filter(activeTag => activeTag !== tag);\n      setActiveTags(updatedActiveTags);\n      // // debugger;\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    } else {\n      // // debugger;\n      updatedActiveTags = activeTags.concat(tag);\n      setActiveTags(updatedActiveTags);\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    }\n    ;\n    // console.log(activeTags);\n    // debugger;\n  };\n\n  var toggleFilterType = () => {\n    setFilterType(filterType === \"AND\" ? \"OR\" : \"AND\");\n    // console.log(filterType);\n  };\n\n  var clearActiveTags = () => {\n    setActiveTags([]);\n    updateProjectsList([]);\n  };\n  var toggleAccordion = tagType => {\n    tagAccordions[tagType] = !tagAccordions[tagType];\n    setTagAccordions({\n      ...tagAccordions\n    });\n  };\n  var toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n  var orderChronologically = projects => {\n    var blah = {};\n    Object.keys(allProjects).forEach(a => {\n      blah[a] = allProjects[a].date;\n      // console.log(allProjects[a].date);\n      // debugger;\n    });\n\n    var reverseChronYears = Array.from(new Set(Object.values(blah))).sort().reverse();\n    // console.log(\"reverseChronYears\");\n    // console.log(reverseChronYears);\n    var orderedProjects = [];\n    reverseChronYears.forEach(year => {\n      Object.keys(projects).forEach(a => {\n        if (year === projects[a].date && !orderedProjects.includes(a)) {\n          orderedProjects.push(a);\n        }\n      });\n    });\n    return orderedProjects;\n  };\n  useEffect(() => {\n    getProjectsAndTags();\n    initializeSeason();\n    initializeColorMode();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: colorMode + \"-mode \" + season,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: \"true\",\n        path: \"/drawing\",\n        element: /*#__PURE__*/_jsxDEV(Drawing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: \"true\",\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          getProjectData: getProjectData,\n          projectData: projectData,\n          displayProjects: displayProjects,\n          projects: projects,\n          orderChronologically: orderChronologically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {\n          getProjectData: getProjectData,\n          projectData: projectData,\n          displayProjects: displayProjects,\n          projects: projects,\n          orderChronologically: orderChronologically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects\",\n        element: /*#__PURE__*/_jsxDEV(Projects, {\n          projects: projects,\n          tools: tags.tools,\n          skills: tags.skills,\n          affiliations: tags.affiliations,\n          roles: tags.roles\n          // tags={tags}\n          ,\n          toggleFilterType: toggleFilterType,\n          filterType: filterType,\n          activeTags: activeTags,\n          displayProjects: displayProjects,\n          clearActiveTags: clearActiveTags,\n          toggleAccordion: toggleAccordion,\n          orderChronologically: orderChronologically,\n          tagAccordions: tagAccordions,\n          projectData: projectData,\n          getProjectData: getProjectData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), Object.keys(projects).map((projectPath, i) => {\n        var path = \"/projects/\" + projectPath;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Content, {\n            projectPath: projectPath,\n            thumbnail: projects[projectPath].thumbnail,\n            data: projectData,\n            getProjectData: getProjectData,\n            title: projects[projectPath].title,\n            tags: {\n              tools: projects[projectPath].tools,\n              skills: projects[projectPath].skills,\n              affiliations: projects[projectPath].affiliations,\n              roles: projects[projectPath].roles\n            },\n            date: projects[projectPath].date,\n            type: \"project\",\n            orderChronologically: orderChronologically\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8AUtccclc7LhWiomM5LDQsmcdIg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","moment","Home","About","Projects","Content","Drawing","React","require","useState","useEffect","App","tags","setTags","tools","skills","affiliations","roles","projects","setProjects","allProjects","setAllProjects","projectData","setProjectData","activeTags","setActiveTags","colorMode","setColorMode","season","setSeason","filterType","setFilterType","tagAccordions","setTagAccordions","isNavVisible","setNavVisibility","initializeSeason","springBegins","summerBegins","autumnBegins","currentMonth","month","initializeColorMode","localTimeHour","parseInt","local","format","toggleColorMode","getTags","blahProjects","Object","keys","length","forEach","projectId","project","tagType","projectTag","getProjectsAndTags","projectsListPath","process","env","PUBLIC_URL","fetch","then","response","json","result","catch","e","getProjectData","projId","projPath","updateProjectsList","activeTagProjectsList","activeTagProjectsSet","Set","projectsToDisplay","ignoredProjectsSet","ignoredProjectsList","projectsToIgnore","tag","projectPath","concat","includes","add","Array","from","filter","blah","a","displayProjects","updatedActiveTags","activeTag","toggleFilterType","clearActiveTags","toggleAccordion","toggleNav","orderChronologically","date","reverseChronYears","values","sort","reverse","orderedProjects","year","push","map","i","path","thumbnail","title"],"sources":["/Users/heidi.slojewski/Desktop/effective-parakeet/src/App.js"],"sourcesContent":["import { Routes, Route } from \"react-router-dom\";\nimport moment from 'moment';\n\nimport './App.scss';\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport Content from './Content';\nimport Drawing from './Drawing';\n\nconst React = require('react'),\n      { useState, useEffect } = require('react');\n\nconst App = () => {\n  var [tags, setTags] = useState({ tools: {}, skills: {}, affiliations: {}, roles: {} });\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [activeTags, setActiveTags] = useState([]);\n  const [colorMode, setColorMode] = useState(\"light\");\n  const [season, setSeason] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"AND\");\n  const [tagAccordions, setTagAccordions] = useState({tools: false, skills: false, affiliations: false, roles: false});\n  const [isNavVisible, setNavVisibility] = useState(false);\n\n\n  var initializeSeason = () => {\n    // // debugger;\n    // const date = new Date('2017-4-28');\n    // const start = new Date('2017-4-20');\n    // const end = new Date('2017-5-16');\n    const springBegins = 2; // March\n    const summerBegins = 4; // May\n    const autumnBegins = 6; // July\n    // const winterBegins = 11;\n    // // console.log(\"month: \"+moment().month());\n\n    const currentMonth = moment().month();\n    if (currentMonth <= springBegins) {\n      setSeason(\"winter\");\n    } else if (currentMonth <= summerBegins) {\n      setSeason(\"spring\");\n    } else if (currentMonth <= autumnBegins) {\n      setSeason(\"summer\");\n    } else {\n      setSeason(\"autumn\");\n    }\n  }\n\n  var initializeColorMode = () => {\n    var localTimeHour = parseInt(moment().local().format(\"H\"));\n    setColorMode((localTimeHour > 6 && localTimeHour < 18) ? \"light\" : \"dark\");\n  }\n\n  var toggleColorMode = () => {\n    colorMode === \"light\" ? setColorMode('dark') : setColorMode('light');\n  }\n  \n  var getTags = (projects) => {\n    tags = { tools: {}, skills: {}, affiliations: {}, roles: {} };\n    var blahProjects = projects;\n    if (Object.keys(allProjects).length) {\n      blahProjects = allProjects;\n    }\n    Object.keys(blahProjects).forEach(projectId => {\n      var project = blahProjects[projectId];\n      ['tools', 'skills', 'affiliations', 'roles'].forEach(tagType => {\n      // ['tools', 'affiliations'].forEach(tagType => {\n      // ['affiliations'].forEach(tagType => {\n        // debugger;\n        if (project[tagType]) {\n          project[tagType].forEach(projectTag => {\n            // console.log(projects);\n            // debugger;\n            // if (projectTag in tags[tagType]) {\n            //   tags[tagType][projectTag]++;\n            // } else {\n            //   if (projects[projectId]) {\n            //     tags[tagType][projectTag] = 1;\n            //   } else {\n            //     tags[tagType][projectTag] = 0;\n            //   }\n            //   debugger;\n            // }\n            // console.log(projectId);\n            // if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n            //   debugger;\n            // }\n\n            if (projects[projectId]) {\n              if (projectTag in tags[tagType]) {\n                tags[tagType][projectTag]++;\n              } else {\n                tags[tagType][projectTag] = 1;\n              }\n            } else {\n              // debugger;\n              if (!tags[tagType][projectTag]) {\n                // debugger;\n                tags[tagType][projectTag] = 0;\n              };\n            }\n          });\n        };\n      });\n    });\n    // console.log(tags);\n    // debugger;\n    setTags({...tags});\n  }\n\n  var getProjectsAndTags = () => {\n    var projectsListPath = `${process.env.PUBLIC_URL}/projects_list.json`;\n    fetch(projectsListPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setAllProjects(result);\n          setProjects(result);\n          getTags(result);\n      }).catch((e: Error) => {\n        // console.log(e.message);\n      });\n  }\n\n  var getProjectData = (projId) => {\n    var projPath = `${process.env.PUBLIC_URL}/projects/${projId}.json`;\n    fetch(projPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setProjectData(result);\n      }).catch((e: Error) => {\n        // console.log(e.message);\n      });\n  }\n\n  var updateProjectsList = (activeTags) => {\n    // console.log(projects);\n    // console.log(activeTags);\n    // // debugger;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(allProjects).forEach(projectPath => {\n          var tools = allProjects[projectPath].tools || [],\n              skills = allProjects[projectPath].skills || [],\n              affiliations = allProjects[projectPath].affiliations || [],\n              roles = allProjects[projectPath].roles || [],\n              tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n          projectsToDisplay = projectsToDisplay.filter(project => {\n            if (!projectsToIgnore.includes(project)) {\n              return project;\n            }\n          });\n        });\n      })\n      var blah = {};\n      projectsToDisplay.forEach(a => {\n        blah[a] = allProjects[a];\n      })\n      getTags(blah);\n      setProjects(blah);\n      // debugger;\n    } else {\n      getTags(allProjects);\n      setProjects(allProjects);\n    }\n  }\n\n  var displayProjects = (tag) => {\n    var updatedActiveTags = activeTags;\n    if (activeTags.includes(tag)) {\n      // // debugger;\n      // setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\n      updatedActiveTags = activeTags.filter(activeTag => activeTag !== tag);\n      setActiveTags(updatedActiveTags);\n      // // debugger;\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    } else {\n      // // debugger;\n      updatedActiveTags = activeTags.concat(tag);\n      setActiveTags(updatedActiveTags);\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    };\n    // console.log(activeTags);\n    // debugger;\n  }\n\n  var toggleFilterType = () => {\n    setFilterType(filterType === \"AND\" ? \"OR\" : \"AND\");\n    // console.log(filterType);\n  }\n\n  var clearActiveTags = () => {\n    setActiveTags([]);\n    updateProjectsList([]);\n  }\n\n  var toggleAccordion = (tagType) => {\n    tagAccordions[tagType] = !tagAccordions[tagType];\n    setTagAccordions({...tagAccordions});\n  }\n\n  var toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  }\n\n  var orderChronologically = (projects) => {\n    var blah = {};\n    Object.keys(allProjects).forEach(a => {\n      blah[a] = allProjects[a].date;\n      // console.log(allProjects[a].date);\n      // debugger;\n    });\n    var reverseChronYears = Array.from(new Set(Object.values(blah))).sort().reverse();\n    // console.log(\"reverseChronYears\");\n    // console.log(reverseChronYears);\n    var orderedProjects = [];\n    reverseChronYears.forEach(year => {\n      Object.keys(projects).forEach(a => {\n        if (year === projects[a].date && !orderedProjects.includes(a)) {\n          orderedProjects.push(a);\n        }\n      })\n    });\n    return orderedProjects;\n  }\n\n  useEffect(() => {\n    getProjectsAndTags();\n    initializeSeason();\n    initializeColorMode();\n  }, [])\n  \n  return (\n    <div className={colorMode + \"-mode \" + season}>\n      <Routes>\n        <Route exact=\"true\" path=\"/drawing\"\n                element={\n                <Drawing\n                />\n                }\n        />\n        <Route exact=\"true\" path=\"/\"\n               element={\n               <Home\n                  getProjectData={getProjectData}\n                  projectData={projectData}\n                  displayProjects={displayProjects}\n                  projects={projects}\n                  orderChronologically={orderChronologically}\n               />\n              }\n        />\n        <Route path=\"/about\"\n               element={\n                <About\n                  getProjectData={getProjectData}\n                  projectData={projectData}\n                  displayProjects={displayProjects}\n                  projects={projects}\n                  orderChronologically={orderChronologically}\n                />\n               }\n        />\n        <Route path=\"/projects\"\n               element={\n                <Projects\n                  projects={projects}\n                  tools={tags.tools}\n                  skills={tags.skills}\n                  affiliations={tags.affiliations}\n                  roles={tags.roles}\n                  // tags={tags}\n                  toggleFilterType={toggleFilterType}\n                  filterType={filterType}\n                  activeTags={activeTags}\n                  displayProjects={displayProjects}\n                  clearActiveTags={clearActiveTags}\n                  toggleAccordion={toggleAccordion}\n                  orderChronologically={orderChronologically}\n                  tagAccordions={tagAccordions}\n                  projectData={projectData}\n                  getProjectData={getProjectData}\n                />\n              }\n        />\n        {Object.keys(projects).map((projectPath, i) => {\n          var path = \"/projects/\" + projectPath;\n          return (\n            <Route path={path}\n                   key={i} \n                   element={\n                    <Content\n                      projectPath={projectPath}\n                      thumbnail={projects[projectPath].thumbnail}\n                      data={projectData}\n                      getProjectData={getProjectData}\n                      title={projects[projectPath].title}\n                      tags={{\n                        tools: projects[projectPath].tools,\n                        skills: projects[projectPath].skills,\n                        affiliations: projects[projectPath].affiliations,\n                        roles: projects[projectPath].roles\n                      }}\n                      date={projects[projectPath].date}\n                      type=\"project\"\n                      orderChronologically={orderChronologically}\n                    />\n                    }\n              />\n          );\n        })}\n        {/* {tools.concat(skills).concat(affiliations).map((tag, i) => {\n          var path = \"/tags/\" + tag;\n          return (\n            <Route path={path} key={i} \n                    element={<Tag projects={projects}\n                                  tag={tag}\n                            />}\n            />\n          );\n        })} */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EACxB;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGF,OAAO,CAAC,OAAO,CAAC;AAEhD,MAAMG,GAAG,GAAG,MAAM;EAAA;EAChB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,KAAK,EAAE,CAAC,CAAC;IAAEC,MAAM,EAAE,CAAC,CAAC;IAAEC,YAAY,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE,CAAC;EAAE,CAAC,CAAC;EACtF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC;IAACK,KAAK,EAAE,KAAK;IAAEC,MAAM,EAAE,KAAK;IAAEC,YAAY,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EACpH,MAAM,CAACiB,YAAY,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAGxD,IAAI2B,gBAAgB,GAAG,MAAM;IAC3B;IACA;IACA;IACA;IACA,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;IACxB;IACA;;IAEA,MAAMC,YAAY,GAAGvC,MAAM,EAAE,CAACwC,KAAK,EAAE;IACrC,IAAID,YAAY,IAAIH,YAAY,EAAE;MAChCR,SAAS,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM,IAAIW,YAAY,IAAIF,YAAY,EAAE;MACvCT,SAAS,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM,IAAIW,YAAY,IAAID,YAAY,EAAE;MACvCV,SAAS,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM;MACLA,SAAS,CAAC,QAAQ,CAAC;IACrB;EACF,CAAC;EAED,IAAIa,mBAAmB,GAAG,MAAM;IAC9B,IAAIC,aAAa,GAAGC,QAAQ,CAAC3C,MAAM,EAAE,CAAC4C,KAAK,EAAE,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1DnB,YAAY,CAAEgB,aAAa,GAAG,CAAC,IAAIA,aAAa,GAAG,EAAE,GAAI,OAAO,GAAG,MAAM,CAAC;EAC5E,CAAC;EAED,IAAII,eAAe,GAAG,MAAM;IAC1BrB,SAAS,KAAK,OAAO,GAAGC,YAAY,CAAC,MAAM,CAAC,GAAGA,YAAY,CAAC,OAAO,CAAC;EACtE,CAAC;EAED,IAAIqB,OAAO,GAAI9B,QAAQ,IAAK;IAC1BN,IAAI,GAAG;MAAEE,KAAK,EAAE,CAAC,CAAC;MAAEC,MAAM,EAAE,CAAC,CAAC;MAAEC,YAAY,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC;IAC7D,IAAIgC,YAAY,GAAG/B,QAAQ;IAC3B,IAAIgC,MAAM,CAACC,IAAI,CAAC/B,WAAW,CAAC,CAACgC,MAAM,EAAE;MACnCH,YAAY,GAAG7B,WAAW;IAC5B;IACA8B,MAAM,CAACC,IAAI,CAACF,YAAY,CAAC,CAACI,OAAO,CAACC,SAAS,IAAI;MAC7C,IAAIC,OAAO,GAAGN,YAAY,CAACK,SAAS,CAAC;MACrC,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,CAAC,CAACD,OAAO,CAACG,OAAO,IAAI;QAChE;QACA;QACE;QACA,IAAID,OAAO,CAACC,OAAO,CAAC,EAAE;UACpBD,OAAO,CAACC,OAAO,CAAC,CAACH,OAAO,CAACI,UAAU,IAAI;YACrC;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;YAEA,IAAIvC,QAAQ,CAACoC,SAAS,CAAC,EAAE;cACvB,IAAIG,UAAU,IAAI7C,IAAI,CAAC4C,OAAO,CAAC,EAAE;gBAC/B5C,IAAI,CAAC4C,OAAO,CAAC,CAACC,UAAU,CAAC,EAAE;cAC7B,CAAC,MAAM;gBACL7C,IAAI,CAAC4C,OAAO,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC;cAC/B;YACF,CAAC,MAAM;cACL;cACA,IAAI,CAAC7C,IAAI,CAAC4C,OAAO,CAAC,CAACC,UAAU,CAAC,EAAE;gBAC9B;gBACA7C,IAAI,CAAC4C,OAAO,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC;cAC/B;cAAC;YACH;UACF,CAAC,CAAC;QACJ;QAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA;IACA5C,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EACpB,CAAC;EAED,IAAI8C,kBAAkB,GAAG,MAAM;IAC7B,IAAIC,gBAAgB,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,qBAAoB;IACrEC,KAAK,CAACJ,gBAAgB,CAAC,CACpBK,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACF,IAAI,CAACG,MAAM,IAAI;MACd9C,cAAc,CAAC8C,MAAM,CAAC;MACtBhD,WAAW,CAACgD,MAAM,CAAC;MACnBnB,OAAO,CAACmB,MAAM,CAAC;IACnB,CAAC,CAAC,CAACC,KAAK,CAAEC,CAAQ,IAAK;MACrB;IAAA,CACD,CAAC;EACN,CAAC;EAED,IAAIC,cAAc,GAAIC,MAAM,IAAK;IAC/B,IAAIC,QAAQ,GAAI,GAAEZ,OAAO,CAACC,GAAG,CAACC,UAAW,aAAYS,MAAO,OAAM;IAClER,KAAK,CAACS,QAAQ,CAAC,CACZR,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACF,IAAI,CAACG,MAAM,IAAI;MACd5C,cAAc,CAAC4C,MAAM,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,CAAQ,IAAK;MACrB;IAAA,CACD,CAAC;EACN,CAAC;EAED,IAAII,kBAAkB,GAAIjD,UAAU,IAAK;IACvC;IACA;IACA;IACA,IAAIkD,qBAAqB,GAAG,EAAE;IAC9B,IAAIC,oBAAoB,GAAG,IAAIC,GAAG,EAAE;IACpC,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAIC,kBAAkB,GAAG,IAAIF,GAAG,EAAE;IAClC,IAAIG,mBAAmB,GAAG,EAAE;IAC5B,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAIxD,UAAU,CAAC4B,MAAM,EAAE;MACrB5B,UAAU,CAAC6B,OAAO,CAAC4B,GAAG,IAAI;QACxB/B,MAAM,CAACC,IAAI,CAAC/B,WAAW,CAAC,CAACiC,OAAO,CAAC6B,WAAW,IAAI;UAC9C,IAAIpE,KAAK,GAAGM,WAAW,CAAC8D,WAAW,CAAC,CAACpE,KAAK,IAAI,EAAE;YAC5CC,MAAM,GAAGK,WAAW,CAAC8D,WAAW,CAAC,CAACnE,MAAM,IAAI,EAAE;YAC9CC,YAAY,GAAGI,WAAW,CAAC8D,WAAW,CAAC,CAAClE,YAAY,IAAI,EAAE;YAC1DC,KAAK,GAAGG,WAAW,CAAC8D,WAAW,CAAC,CAACjE,KAAK,IAAI,EAAE;YAC5CL,IAAI,GAAGE,KAAK,CAACqE,MAAM,CAACpE,MAAM,CAAC,CAACoE,MAAM,CAACnE,YAAY,CAAC,CAACmE,MAAM,CAAClE,KAAK,CAAC;UAClE,IAAIL,IAAI,CAACwE,QAAQ,CAACH,GAAG,CAAC,EAAE;YACtBN,oBAAoB,CAACU,GAAG,CAACH,WAAW,CAAC;YACrCR,qBAAqB,GAAGY,KAAK,CAACC,IAAI,CAACZ,oBAAoB,CAAC;YACxDE,iBAAiB,GAAGH,qBAAqB;UAC3C,CAAC,MAAM;YACLI,kBAAkB,CAACO,GAAG,CAACH,WAAW,CAAC;YACnCH,mBAAmB,GAAGO,KAAK,CAACC,IAAI,CAACT,kBAAkB,CAAC;YACpDE,gBAAgB,GAAGD,mBAAmB;UACxC;UACAF,iBAAiB,GAAGA,iBAAiB,CAACW,MAAM,CAACjC,OAAO,IAAI;YACtD,IAAI,CAACyB,gBAAgB,CAACI,QAAQ,CAAC7B,OAAO,CAAC,EAAE;cACvC,OAAOA,OAAO;YAChB;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,IAAIkC,IAAI,GAAG,CAAC,CAAC;MACbZ,iBAAiB,CAACxB,OAAO,CAACqC,CAAC,IAAI;QAC7BD,IAAI,CAACC,CAAC,CAAC,GAAGtE,WAAW,CAACsE,CAAC,CAAC;MAC1B,CAAC,CAAC;MACF1C,OAAO,CAACyC,IAAI,CAAC;MACbtE,WAAW,CAACsE,IAAI,CAAC;MACjB;IACF,CAAC,MAAM;MACLzC,OAAO,CAAC5B,WAAW,CAAC;MACpBD,WAAW,CAACC,WAAW,CAAC;IAC1B;EACF,CAAC;EAED,IAAIuE,eAAe,GAAIV,GAAG,IAAK;IAC7B,IAAIW,iBAAiB,GAAGpE,UAAU;IAClC,IAAIA,UAAU,CAAC4D,QAAQ,CAACH,GAAG,CAAC,EAAE;MAC5B;MACA;MACAW,iBAAiB,GAAGpE,UAAU,CAACgE,MAAM,CAACK,SAAS,IAAIA,SAAS,KAAKZ,GAAG,CAAC;MACrExD,aAAa,CAACmE,iBAAiB,CAAC;MAChC;MACA;MACAnB,kBAAkB,CAACmB,iBAAiB,CAAC;IACvC,CAAC,MAAM;MACL;MACAA,iBAAiB,GAAGpE,UAAU,CAAC2D,MAAM,CAACF,GAAG,CAAC;MAC1CxD,aAAa,CAACmE,iBAAiB,CAAC;MAChC;MACAnB,kBAAkB,CAACmB,iBAAiB,CAAC;IACvC;IAAC;IACD;IACA;EACF,CAAC;;EAED,IAAIE,gBAAgB,GAAG,MAAM;IAC3B/D,aAAa,CAACD,UAAU,KAAK,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;IAClD;EACF,CAAC;;EAED,IAAIiE,eAAe,GAAG,MAAM;IAC1BtE,aAAa,CAAC,EAAE,CAAC;IACjBgD,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,IAAIuB,eAAe,GAAIxC,OAAO,IAAK;IACjCxB,aAAa,CAACwB,OAAO,CAAC,GAAG,CAACxB,aAAa,CAACwB,OAAO,CAAC;IAChDvB,gBAAgB,CAAC;MAAC,GAAGD;IAAa,CAAC,CAAC;EACtC,CAAC;EAED,IAAIiE,SAAS,GAAG,MAAM;IACpB9D,gBAAgB,CAAC,CAACD,YAAY,CAAC;EACjC,CAAC;EAED,IAAIgE,oBAAoB,GAAIhF,QAAQ,IAAK;IACvC,IAAIuE,IAAI,GAAG,CAAC,CAAC;IACbvC,MAAM,CAACC,IAAI,CAAC/B,WAAW,CAAC,CAACiC,OAAO,CAACqC,CAAC,IAAI;MACpCD,IAAI,CAACC,CAAC,CAAC,GAAGtE,WAAW,CAACsE,CAAC,CAAC,CAACS,IAAI;MAC7B;MACA;IACF,CAAC,CAAC;;IACF,IAAIC,iBAAiB,GAAGd,KAAK,CAACC,IAAI,CAAC,IAAIX,GAAG,CAAC1B,MAAM,CAACmD,MAAM,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACa,IAAI,EAAE,CAACC,OAAO,EAAE;IACjF;IACA;IACA,IAAIC,eAAe,GAAG,EAAE;IACxBJ,iBAAiB,CAAC/C,OAAO,CAACoD,IAAI,IAAI;MAChCvD,MAAM,CAACC,IAAI,CAACjC,QAAQ,CAAC,CAACmC,OAAO,CAACqC,CAAC,IAAI;QACjC,IAAIe,IAAI,KAAKvF,QAAQ,CAACwE,CAAC,CAAC,CAACS,IAAI,IAAI,CAACK,eAAe,CAACpB,QAAQ,CAACM,CAAC,CAAC,EAAE;UAC7Dc,eAAe,CAACE,IAAI,CAAChB,CAAC,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOc,eAAe;EACxB,CAAC;EAED9F,SAAS,CAAC,MAAM;IACdgD,kBAAkB,EAAE;IACpBtB,gBAAgB,EAAE;IAClBM,mBAAmB,EAAE;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAEhB,SAAS,GAAG,QAAQ,GAAGE,MAAO;IAAA,uBAC5C,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAC,UAAU;QAC3B,OAAO,eACP,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA;MAEP;QAAA;QAAA;QAAA;MAAA,QACP,eACF,QAAC,KAAK;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAC,GAAG;QACrB,OAAO,eACP,QAAC,IAAI;UACF,cAAc,EAAE0C,cAAe;UAC/B,WAAW,EAAEhD,WAAY;UACzB,eAAe,EAAEqE,eAAgB;UACjC,QAAQ,EAAEzE,QAAS;UACnB,oBAAoB,EAAEgF;QAAqB;UAAA;UAAA;UAAA;QAAA;MAE9C;QAAA;QAAA;QAAA;MAAA,QACL,eACF,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QACb,OAAO,eACN,QAAC,KAAK;UACJ,cAAc,EAAE5B,cAAe;UAC/B,WAAW,EAAEhD,WAAY;UACzB,eAAe,EAAEqE,eAAgB;UACjC,QAAQ,EAAEzE,QAAS;UACnB,oBAAoB,EAAEgF;QAAqB;UAAA;UAAA;UAAA;QAAA;MAE7C;QAAA;QAAA;QAAA;MAAA,QACN,eACF,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAChB,OAAO,eACN,QAAC,QAAQ;UACP,QAAQ,EAAEhF,QAAS;UACnB,KAAK,EAAEN,IAAI,CAACE,KAAM;UAClB,MAAM,EAAEF,IAAI,CAACG,MAAO;UACpB,YAAY,EAAEH,IAAI,CAACI,YAAa;UAChC,KAAK,EAAEJ,IAAI,CAACK;UACZ;UAAA;UACA,gBAAgB,EAAE6E,gBAAiB;UACnC,UAAU,EAAEhE,UAAW;UACvB,UAAU,EAAEN,UAAW;UACvB,eAAe,EAAEmE,eAAgB;UACjC,eAAe,EAAEI,eAAgB;UACjC,eAAe,EAAEC,eAAgB;UACjC,oBAAoB,EAAEE,oBAAqB;UAC3C,aAAa,EAAElE,aAAc;UAC7B,WAAW,EAAEV,WAAY;UACzB,cAAc,EAAEgD;QAAe;UAAA;UAAA;UAAA;QAAA;MAElC;QAAA;QAAA;QAAA;MAAA,QACL,EACDpB,MAAM,CAACC,IAAI,CAACjC,QAAQ,CAAC,CAACyF,GAAG,CAAC,CAACzB,WAAW,EAAE0B,CAAC,KAAK;QAC7C,IAAIC,IAAI,GAAG,YAAY,GAAG3B,WAAW;QACrC,oBACE,QAAC,KAAK;UAAC,IAAI,EAAE2B,IAAK;UAEX,OAAO,eACN,QAAC,OAAO;YACN,WAAW,EAAE3B,WAAY;YACzB,SAAS,EAAEhE,QAAQ,CAACgE,WAAW,CAAC,CAAC4B,SAAU;YAC3C,IAAI,EAAExF,WAAY;YAClB,cAAc,EAAEgD,cAAe;YAC/B,KAAK,EAAEpD,QAAQ,CAACgE,WAAW,CAAC,CAAC6B,KAAM;YACnC,IAAI,EAAE;cACJjG,KAAK,EAAEI,QAAQ,CAACgE,WAAW,CAAC,CAACpE,KAAK;cAClCC,MAAM,EAAEG,QAAQ,CAACgE,WAAW,CAAC,CAACnE,MAAM;cACpCC,YAAY,EAAEE,QAAQ,CAACgE,WAAW,CAAC,CAAClE,YAAY;cAChDC,KAAK,EAAEC,QAAQ,CAACgE,WAAW,CAAC,CAACjE;YAC/B,CAAE;YACF,IAAI,EAAEC,QAAQ,CAACgE,WAAW,CAAC,CAACiB,IAAK;YACjC,IAAI,EAAC,SAAS;YACd,oBAAoB,EAAED;UAAqB;YAAA;YAAA;YAAA;UAAA;QAE5C,GAlBGU,CAAC;UAAA;UAAA;UAAA;QAAA,QAmBT;MAER,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAWK;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GA1UKjG,GAAG;AAAA,KAAHA,GAAG;AA4UT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}