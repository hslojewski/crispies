{"ast":null,"code":"import _objectSpread from\"/Users/heidi.slojewski/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/heidi.slojewski/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Routes,Route}from\"react-router-dom\";import moment from'moment';import'./App.scss';import Nav from'./Nav';import Footer from'./Footer';import Home from'./Home';import About from'./About';import Projects from'./Projects';import Content from'./Content';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var React=require('react'),_require=require('react'),useState=_require.useState,useEffect=_require.useEffect;var App=function App(){var _useState=useState({tools:{},skills:{},affiliations:{},roles:{}}),_useState2=_slicedToArray(_useState,2),tags=_useState2[0],setTags=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),projects=_useState4[0],setProjects=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),allProjects=_useState6[0],setAllProjects=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),projectData=_useState8[0],setProjectData=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),activeTags=_useState10[0],setActiveTags=_useState10[1];var _useState11=useState(\"light\"),_useState12=_slicedToArray(_useState11,2),colorMode=_useState12[0],setColorMode=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),season=_useState14[0],setSeason=_useState14[1];var _useState15=useState(\"AND\"),_useState16=_slicedToArray(_useState15,2),filterType=_useState16[0],setFilterType=_useState16[1];var _useState17=useState({tools:false,skills:false,affiliations:false,roles:false}),_useState18=_slicedToArray(_useState17,2),tagAccordions=_useState18[0],setTagAccordions=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isNavVisible=_useState20[0],setNavVisibility=_useState20[1];var initializeSeason=function initializeSeason(){// // debugger;\n// const date = new Date('2017-4-28');\n// const start = new Date('2017-4-20');\n// const end = new Date('2017-5-16');\nvar springBegins=2;// March\nvar summerBegins=4;// May\nvar autumnBegins=6;// July\n// const winterBegins = 11;\n// // console.log(\"month: \"+moment().month());\nvar currentMonth=moment().month();if(currentMonth<=springBegins){setSeason(\"winter\");}else if(currentMonth<=summerBegins){setSeason(\"spring\");}else if(currentMonth<=autumnBegins){setSeason(\"summer\");}else{setSeason(\"autumn\");}};var initializeColorMode=function initializeColorMode(){var localTimeHour=parseInt(moment().local().format(\"H\"));setColorMode(localTimeHour>6&&localTimeHour<18?\"light\":\"dark\");};var toggleColorMode=function toggleColorMode(){colorMode===\"light\"?setColorMode('dark'):setColorMode('light');};var getTags=function getTags(projects){tags={tools:{},skills:{},affiliations:{},roles:{}};var blahProjects=projects;if(Object.keys(allProjects).length){blahProjects=allProjects;}Object.keys(blahProjects).forEach(function(projectId){var project=blahProjects[projectId];['tools','skills','affiliations','roles'].forEach(function(tagType){// ['tools', 'affiliations'].forEach(tagType => {\n// ['affiliations'].forEach(tagType => {\n// debugger;\nif(project[tagType]){project[tagType].forEach(function(projectTag){// console.log(projects);\n// debugger;\n// if (projectTag in tags[tagType]) {\n//   tags[tagType][projectTag]++;\n// } else {\n//   if (projects[projectId]) {\n//     tags[tagType][projectTag] = 1;\n//   } else {\n//     tags[tagType][projectTag] = 0;\n//   }\n//   debugger;\n// }\n// console.log(projectId);\n// if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n//   debugger;\n// }\nif(projects[projectId]){if(projectTag in tags[tagType]){tags[tagType][projectTag]++;}else{tags[tagType][projectTag]=1;}}else{// debugger;\nif(!tags[tagType][projectTag]){// debugger;\ntags[tagType][projectTag]=0;};}});};});});// console.log(tags);\n// debugger;\nsetTags(_objectSpread({},tags));};var getProjectsAndTags=function getProjectsAndTags(){var projectsListPath=\"\".concat(process.env.PUBLIC_URL,\"/projects_list.json\");fetch(projectsListPath).then(function(response){return response.json();}).then(function(result){setAllProjects(result);setProjects(result);getTags(result);}).catch(function(e){// console.log(e.message);\n});};var getProjectData=function getProjectData(projId){var projPath=\"\".concat(process.env.PUBLIC_URL,\"/projects/\").concat(projId,\".json\");fetch(projPath).then(function(response){return response.json();}).then(function(result){setProjectData(result);}).catch(function(e){// console.log(e.message);\n});};var updateProjectsList=function updateProjectsList(activeTags){// console.log(projects);\n// console.log(activeTags);\n// // debugger;\nvar activeTagProjectsList=[];var activeTagProjectsSet=new Set();var projectsToDisplay=[];var ignoredProjectsSet=new Set();var ignoredProjectsList=[];var projectsToIgnore=[];if(activeTags.length){activeTags.forEach(function(tag){Object.keys(allProjects).map(function(projectPath){var tools=allProjects[projectPath].tools||[],skills=allProjects[projectPath].skills||[],affiliations=allProjects[projectPath].affiliations||[],roles=allProjects[projectPath].roles||[],tags=tools.concat(skills).concat(affiliations).concat(roles);if(tags.includes(tag)){activeTagProjectsSet.add(projectPath);activeTagProjectsList=Array.from(activeTagProjectsSet);projectsToDisplay=activeTagProjectsList;}else{ignoredProjectsSet.add(projectPath);ignoredProjectsList=Array.from(ignoredProjectsSet);projectsToIgnore=ignoredProjectsList;}projectsToDisplay=projectsToDisplay.filter(function(project){if(!projectsToIgnore.includes(project)){return project;}});});});var blah={};projectsToDisplay.forEach(function(a){blah[a]=allProjects[a];});getTags(blah);setProjects(blah);// debugger;\n}else{getTags(allProjects);setProjects(allProjects);}};var displayProjects=function displayProjects(tag){var updatedActiveTags=activeTags;if(activeTags.includes(tag)){// // debugger;\n// setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\nupdatedActiveTags=activeTags.filter(function(activeTag){return activeTag!==tag;});setActiveTags(updatedActiveTags);// // debugger;\n// getTags(projects);\nupdateProjectsList(updatedActiveTags);}else{// // debugger;\nupdatedActiveTags=activeTags.concat(tag);setActiveTags(updatedActiveTags);// getTags(projects);\nupdateProjectsList(updatedActiveTags);};// console.log(activeTags);\n// debugger;\n};var toggleFilterType=function toggleFilterType(){setFilterType(filterType===\"AND\"?\"OR\":\"AND\");// console.log(filterType);\n};var clearActiveTags=function clearActiveTags(){setActiveTags([]);updateProjectsList([]);};var toggleAccordion=function toggleAccordion(tagType){tagAccordions[tagType]=!tagAccordions[tagType];setTagAccordions(_objectSpread({},tagAccordions));};var toggleNav=function toggleNav(){setNavVisibility(!isNavVisible);};var orderChronologically=function orderChronologically(projects){var blah={};Object.keys(allProjects).map(function(a){blah[a]=allProjects[a].date;// console.log(allProjects[a].date);\n// debugger;\n});var reverseChronYears=Array.from(new Set(Object.values(blah))).reverse();// console.log(\"reverseChronYears\");\n// console.log(reverseChronYears);\nvar orderedProjects=[];reverseChronYears.forEach(function(year){Object.keys(projects).forEach(function(a){if(year===projects[a].date&&!orderedProjects.includes(a)){orderedProjects.push(a);}});});return orderedProjects;};useEffect(function(){getProjectsAndTags();initializeSeason();initializeColorMode();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:colorMode+\"-mode \"+season,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"image-modal\",className:\"modal\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close-modal\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"img\",{className:\"modal-content\",id:\"modal-image\"})]}),/*#__PURE__*/_jsx(Nav,{colorMode:colorMode,toggleColorMode:toggleColorMode,isNavVisible:isNavVisible,toggleNav:toggleNav}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:\"true\",path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{getProjectData:getProjectData,projectData:projectData,displayProjects:displayProjects,projects:projects,orderChronologically:orderChronologically})}),/*#__PURE__*/_jsx(Route,{path:\"/projects\",element:/*#__PURE__*/_jsx(Projects,{projects:projects,tools:tags.tools,skills:tags.skills,affiliations:tags.affiliations,roles:tags.roles// tags={tags}\n,toggleFilterType:toggleFilterType,filterType:filterType,activeTags:activeTags,displayProjects:displayProjects,clearActiveTags:clearActiveTags,toggleAccordion:toggleAccordion,orderChronologically:orderChronologically,tagAccordions:tagAccordions})}),Object.keys(projects).map(function(projectPath,i){var path=\"/projects/\"+projectPath;return/*#__PURE__*/_jsx(Route,{path:path,element:/*#__PURE__*/_jsx(Content,{projectPath:projectPath,thumbnail:projects[projectPath].thumbnail,data:projectData,getProjectData:getProjectData,title:projects[projectPath].title,tags:{tools:projects[projectPath].tools,skills:projects[projectPath].skills,affiliations:projects[projectPath].affiliations,roles:projects[projectPath].roles},date:projects[projectPath].date,type:\"project\",orderChronologically:orderChronologically})},i);})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default App;","map":{"version":3,"names":["Routes","Route","moment","Nav","Footer","Home","About","Projects","Content","React","require","useState","useEffect","App","tools","skills","affiliations","roles","tags","setTags","projects","setProjects","allProjects","setAllProjects","projectData","setProjectData","activeTags","setActiveTags","colorMode","setColorMode","season","setSeason","filterType","setFilterType","tagAccordions","setTagAccordions","isNavVisible","setNavVisibility","initializeSeason","springBegins","summerBegins","autumnBegins","currentMonth","month","initializeColorMode","localTimeHour","parseInt","local","format","toggleColorMode","getTags","blahProjects","Object","keys","length","forEach","projectId","project","tagType","projectTag","getProjectsAndTags","projectsListPath","process","env","PUBLIC_URL","fetch","then","response","json","result","catch","e","getProjectData","projId","projPath","updateProjectsList","activeTagProjectsList","activeTagProjectsSet","Set","projectsToDisplay","ignoredProjectsSet","ignoredProjectsList","projectsToIgnore","tag","map","projectPath","concat","includes","add","Array","from","filter","blah","a","displayProjects","updatedActiveTags","activeTag","toggleFilterType","clearActiveTags","toggleAccordion","toggleNav","orderChronologically","date","reverseChronYears","values","reverse","orderedProjects","year","push","i","path","thumbnail","title"],"sources":["/Users/heidi.slojewski/Desktop/portfolio/src/App.js"],"sourcesContent":["import { Routes, Route } from \"react-router-dom\";\nimport moment from 'moment';\n\nimport './App.scss';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport Content from './Content';\n\nconst React = require('react'),\n      { useState, useEffect } = require('react');\n\nconst App = () => {\n  var [tags, setTags] = useState({ tools: {}, skills: {}, affiliations: {}, roles: {} });\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [activeTags, setActiveTags] = useState([]);\n  const [colorMode, setColorMode] = useState(\"light\");\n  const [season, setSeason] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"AND\");\n  const [tagAccordions, setTagAccordions] = useState({tools: false, skills: false, affiliations: false, roles: false});\n  const [isNavVisible, setNavVisibility] = useState(false);\n\n\n  var initializeSeason = () => {\n    // // debugger;\n    // const date = new Date('2017-4-28');\n    // const start = new Date('2017-4-20');\n    // const end = new Date('2017-5-16');\n    const springBegins = 2; // March\n    const summerBegins = 4; // May\n    const autumnBegins = 6; // July\n    // const winterBegins = 11;\n    // // console.log(\"month: \"+moment().month());\n\n    const currentMonth = moment().month();\n    if (currentMonth <= springBegins) {\n      setSeason(\"winter\");\n    } else if (currentMonth <= summerBegins) {\n      setSeason(\"spring\");\n    } else if (currentMonth <= autumnBegins) {\n      setSeason(\"summer\");\n    } else {\n      setSeason(\"autumn\");\n    }\n  }\n\n  var initializeColorMode = () => {\n    var localTimeHour = parseInt(moment().local().format(\"H\"));\n    setColorMode((localTimeHour > 6 && localTimeHour < 18) ? \"light\" : \"dark\");\n  }\n\n  var toggleColorMode = () => {\n    colorMode === \"light\" ? setColorMode('dark') : setColorMode('light');\n  }\n  \n  var getTags = (projects) => {\n    tags = { tools: {}, skills: {}, affiliations: {}, roles: {} };\n    var blahProjects = projects;\n    if (Object.keys(allProjects).length) {\n      blahProjects = allProjects;\n    }\n    Object.keys(blahProjects).forEach(projectId => {\n      var project = blahProjects[projectId];\n      ['tools', 'skills', 'affiliations', 'roles'].forEach(tagType => {\n      // ['tools', 'affiliations'].forEach(tagType => {\n      // ['affiliations'].forEach(tagType => {\n        // debugger;\n        if (project[tagType]) {\n          project[tagType].forEach(projectTag => {\n            // console.log(projects);\n            // debugger;\n            // if (projectTag in tags[tagType]) {\n            //   tags[tagType][projectTag]++;\n            // } else {\n            //   if (projects[projectId]) {\n            //     tags[tagType][projectTag] = 1;\n            //   } else {\n            //     tags[tagType][projectTag] = 0;\n            //   }\n            //   debugger;\n            // }\n            // console.log(projectId);\n            // if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n            //   debugger;\n            // }\n\n            if (projects[projectId]) {\n              if (projectTag in tags[tagType]) {\n                tags[tagType][projectTag]++;\n              } else {\n                tags[tagType][projectTag] = 1;\n              }\n            } else {\n              // debugger;\n              if (!tags[tagType][projectTag]) {\n                // debugger;\n                tags[tagType][projectTag] = 0;\n              };\n            }\n          });\n        };\n      });\n    });\n    // console.log(tags);\n    // debugger;\n    setTags({...tags});\n  }\n\n  var getProjectsAndTags = () => {\n    var projectsListPath = `${process.env.PUBLIC_URL}/projects_list.json`;\n    fetch(projectsListPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setAllProjects(result);\n          setProjects(result);\n          getTags(result);\n      }).catch((e: Error) => {\n        // console.log(e.message);\n      });\n  }\n\n  var getProjectData = (projId) => {\n    var projPath = `${process.env.PUBLIC_URL}/projects/${projId}.json`;\n    fetch(projPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setProjectData(result);\n      }).catch((e: Error) => {\n        // console.log(e.message);\n      });\n  }\n\n  var updateProjectsList = (activeTags) => {\n    // console.log(projects);\n    // console.log(activeTags);\n    // // debugger;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(allProjects).map(projectPath => {\n          var tools = allProjects[projectPath].tools || [],\n              skills = allProjects[projectPath].skills || [],\n              affiliations = allProjects[projectPath].affiliations || [],\n              roles = allProjects[projectPath].roles || [],\n              tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n          projectsToDisplay = projectsToDisplay.filter(project => {\n            if (!projectsToIgnore.includes(project)) {\n              return project;\n            }\n          });\n        });\n      })\n      var blah = {};\n      projectsToDisplay.forEach(a => {\n        blah[a] = allProjects[a];\n      })\n      getTags(blah);\n      setProjects(blah);\n      // debugger;\n    } else {\n      getTags(allProjects);\n      setProjects(allProjects);\n    }\n  }\n\n  var displayProjects = (tag) => {\n    var updatedActiveTags = activeTags;\n    if (activeTags.includes(tag)) {\n      // // debugger;\n      // setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\n      updatedActiveTags = activeTags.filter(activeTag => activeTag !== tag);\n      setActiveTags(updatedActiveTags);\n      // // debugger;\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    } else {\n      // // debugger;\n      updatedActiveTags = activeTags.concat(tag);\n      setActiveTags(updatedActiveTags);\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    };\n    // console.log(activeTags);\n    // debugger;\n  }\n\n  var toggleFilterType = () => {\n    setFilterType(filterType === \"AND\" ? \"OR\" : \"AND\");\n    // console.log(filterType);\n  }\n\n  var clearActiveTags = () => {\n    setActiveTags([]);\n    updateProjectsList([]);\n  }\n\n  var toggleAccordion = (tagType) => {\n    tagAccordions[tagType] = !tagAccordions[tagType];\n    setTagAccordions({...tagAccordions});\n  }\n\n  var toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  }\n\n  var orderChronologically = (projects) => {\n    var blah = {};\n    Object.keys(allProjects).map(a => {\n      blah[a] = allProjects[a].date;\n      // console.log(allProjects[a].date);\n      // debugger;\n    });\n    var reverseChronYears = Array.from(new Set(Object.values(blah))).reverse();\n    // console.log(\"reverseChronYears\");\n    // console.log(reverseChronYears);\n    var orderedProjects = [];\n    reverseChronYears.forEach(year => {\n      Object.keys(projects).forEach(a => {\n        if (year === projects[a].date && !orderedProjects.includes(a)) {\n          orderedProjects.push(a);\n        }\n      })\n    });\n    return orderedProjects;\n  }\n\n  useEffect(() => {\n    getProjectsAndTags();\n    initializeSeason();\n    initializeColorMode();\n  }, [])\n  \n  return (\n    <div className={colorMode + \"-mode \" + season}>\n      <div id=\"image-modal\" className=\"modal\">\n        <span className=\"close-modal\">&times;</span>\n        <img className=\"modal-content\" id=\"modal-image\" />\n      </div>\n      <Nav\n        colorMode={colorMode}\n        toggleColorMode={toggleColorMode}\n        isNavVisible={isNavVisible}\n        toggleNav={toggleNav}\n      />\n      <Routes>\n        <Route exact=\"true\" path=\"/\" element={<Home />} />\n        <Route path=\"/about\"\n               element={\n                <About\n                  getProjectData={getProjectData}\n                  projectData={projectData}\n                  displayProjects={displayProjects}\n                  projects={projects}\n                  orderChronologically={orderChronologically}\n                />\n               }\n        />\n        <Route path=\"/projects\"\n               element={\n                <Projects\n                  projects={projects}\n                  tools={tags.tools}\n                  skills={tags.skills}\n                  affiliations={tags.affiliations}\n                  roles={tags.roles}\n                  // tags={tags}\n                  toggleFilterType={toggleFilterType}\n                  filterType={filterType}\n                  activeTags={activeTags}\n                  displayProjects={displayProjects}\n                  clearActiveTags={clearActiveTags}\n                  toggleAccordion={toggleAccordion}\n                  orderChronologically={orderChronologically}\n                  tagAccordions={tagAccordions}\n                />\n              }\n        />\n        {Object.keys(projects).map((projectPath, i) => {\n          var path = \"/projects/\" + projectPath;\n          return (\n            <Route path={path}\n                   key={i} \n                   element={\n                    <Content\n                      projectPath={projectPath}\n                      thumbnail={projects[projectPath].thumbnail}\n                      data={projectData}\n                      getProjectData={getProjectData}\n                      title={projects[projectPath].title}\n                      tags={{\n                        tools: projects[projectPath].tools,\n                        skills: projects[projectPath].skills,\n                        affiliations: projects[projectPath].affiliations,\n                        roles: projects[projectPath].roles\n                      }}\n                      date={projects[projectPath].date}\n                      type=\"project\"\n                      orderChronologically={orderChronologically}\n                    />\n                    }\n              />\n          );\n        })}\n        {/* {tools.concat(skills).concat(affiliations).map((tag, i) => {\n          var path = \"/tags/\" + tag;\n          return (\n            <Route path={path} key={i} \n                    element={<Tag projects={projects}\n                                  tag={tag}\n                            />}\n            />\n          );\n        })} */}\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}