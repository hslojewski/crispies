{"ast":null,"code":"var _jsxFileName = \"/Users/heidi.slojewski/Desktop/effective-parakeet/src/FilteredProjects.js\";\nimport { Link } from \"react-router-dom\";\nimport Content from './Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst React = require('react');\nclass FilteredProjects extends React.Component {\n  render() {\n    const {\n      orderChronologically,\n      projectData,\n      getProjectData,\n      projects = {},\n      activeTags = [],\n      filterType = \"AND\",\n      numToDisplay = null\n    } = this.props;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(projects).forEach(projectPath => {\n          var tools = projects[projectPath].tools || [],\n            skills = projects[projectPath].skills || [],\n            affiliations = projects[projectPath].affiliations || [],\n            roles = projects[projectPath].roles || [],\n            tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n        });\n      });\n    } else {\n      projectsToDisplay = Object.keys(projects);\n    }\n    if (filterType === \"AND\") {\n      // debugger;\n      projectsToDisplay = projectsToDisplay.filter(project => {\n        if (!projectsToIgnore.includes(project)) {\n          return project;\n        }\n      });\n    }\n    var orderedProjects = orderChronologically(projects);\n    projectsToDisplay = orderedProjects.filter(a => projectsToDisplay.includes(a));\n    if (numToDisplay && projectsToDisplay.length) {\n      projectsToDisplay = projectsToDisplay.slice(0, numToDisplay);\n    }\n    // console.log(numToDisplay);\n    // console.log(projectsToDisplay);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [projectsToDisplay.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: projectsToDisplay.length === 1 ? \"one-item\" : projectsToDisplay.length === 2 ? \"two-items\" : null,\n          children: projectsToDisplay.map((projectPath, i) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"project-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Content, {\n                      projectPath: projectPath,\n                      thumbnail: projects[projectPath].thumbnail,\n                      data: projectData,\n                      getProjectData: getProjectData,\n                      title: projects[projectPath].title,\n                      postContent: projects[projectPath].postContent,\n                      images: projects[projectPath].images,\n                      tags: {\n                        tools: projects[projectPath].tools,\n                        skills: projects[projectPath].skills,\n                        affiliations: projects[projectPath].affiliations,\n                        roles: projects[projectPath].roles\n                      },\n                      date: projects[projectPath].date,\n                      type: \"project\",\n                      orderChronologically: orderChronologically\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), projectsToDisplay.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default FilteredProjects;","map":{"version":3,"names":["Link","Content","React","require","FilteredProjects","Component","render","orderChronologically","projectData","getProjectData","projects","activeTags","filterType","numToDisplay","props","activeTagProjectsList","activeTagProjectsSet","Set","projectsToDisplay","ignoredProjectsSet","ignoredProjectsList","projectsToIgnore","length","forEach","tag","Object","keys","projectPath","tools","skills","affiliations","roles","tags","concat","includes","add","Array","from","filter","project","orderedProjects","a","slice","map","i","thumbnail","title","postContent","images","date"],"sources":["/Users/heidi.slojewski/Desktop/effective-parakeet/src/FilteredProjects.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport Content from './Content';\n\nconst React = require('react');\n\nclass FilteredProjects extends React.Component {\n  render() {\n    const {\n      orderChronologically, projectData, getProjectData,\n      projects = {}, activeTags = [], filterType = \"AND\", numToDisplay =  null\n    } = this.props;\n\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(projects).forEach(projectPath => {\n          var tools = projects[projectPath].tools || [],\n              skills = projects[projectPath].skills || [],\n              affiliations = projects[projectPath].affiliations || [],\n              roles = projects[projectPath].roles || [],\n              tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n        });\n      });\n    } else {\n      projectsToDisplay = Object.keys(projects);\n    }\n    if (filterType === \"AND\") {\n      // debugger;\n      projectsToDisplay = projectsToDisplay.filter(project => {\n        if (!projectsToIgnore.includes(project)) {\n          return project;\n        }\n      });\n    }\n    var orderedProjects = orderChronologically(projects);\n    projectsToDisplay = orderedProjects.filter(a => projectsToDisplay.includes(a));\n    \n    if (numToDisplay && projectsToDisplay.length) {\n      projectsToDisplay = projectsToDisplay.slice(0, numToDisplay);\n    }\n    // console.log(numToDisplay);\n    // console.log(projectsToDisplay);\n\n    return (\n        <div>\n          {projectsToDisplay.length > 0 &&\n            <div className=\"project-list-wrapper\">\n              <ul className={projectsToDisplay.length === 1 ? \"one-item\" : (projectsToDisplay.length === 2 ? \"two-items\" : null)}>\n              {projectsToDisplay.map((projectPath, i) => {\n                return(\n                  <li key={i} className=\"project-detail\">\n                    <table>\n                      <tr>\n                        <td>\n                        <Content\n                          projectPath={projectPath}\n                          thumbnail={projects[projectPath].thumbnail}\n                          data={projectData}\n                          getProjectData={getProjectData}\n                          title={projects[projectPath].title}\n                          postContent={projects[projectPath].postContent}\n                          images={projects[projectPath].images}\n                          tags={{\n                            tools: projects[projectPath].tools,\n                            skills: projects[projectPath].skills,\n                            affiliations: projects[projectPath].affiliations,\n                            roles: projects[projectPath].roles\n                          }}\n                          date={projects[projectPath].date}\n                          type=\"project\"\n                          orderChronologically={orderChronologically}\n                      />\n                        </td>\n                      </tr>\n                    </table>\n                  </li>\n                )\n              })}\n              </ul>\n            </div>\n          }\n          {projectsToDisplay.length === 0 &&\n            <div></div>\n          }\n        </div>\n    )\n  }\n}\n\nexport default FilteredProjects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}