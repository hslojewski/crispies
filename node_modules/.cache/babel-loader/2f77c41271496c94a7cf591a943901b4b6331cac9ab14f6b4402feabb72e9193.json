{"ast":null,"code":"var _jsxFileName = \"/Users/heidi.slojewski/Desktop/portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from \"react-router-dom\";\nimport moment from 'moment';\nimport './App.scss';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport Content from './Content';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst React = require('react'),\n  {\n    useState,\n    useEffect\n  } = require('react');\nconst App = () => {\n  _s();\n  var [tags, setTags] = useState({\n    tools: {},\n    skills: {},\n    affiliations: {},\n    roles: {}\n  });\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [activeTags, setActiveTags] = useState([]);\n  const [colorMode, setColorMode] = useState(\"light\");\n  const [season, setSeason] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"AND\");\n  const [tagAccordions, setTagAccordions] = useState({\n    tools: false,\n    skills: false,\n    affiliations: false,\n    roles: false\n  });\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [activeImage, setActiveImage] = useState(\"\");\n  var initializeSeason = () => {\n    // // debugger;\n    // const date = new Date('2017-4-28');\n    // const start = new Date('2017-4-20');\n    // const end = new Date('2017-5-16');\n    const springBegins = 2; // March\n    const summerBegins = 4; // May\n    const autumnBegins = 6; // July\n    // const winterBegins = 11;\n    // console.log(\"month: \"+moment().month());\n\n    const currentMonth = moment().month();\n    if (currentMonth <= springBegins) {\n      setSeason(\"winter\");\n    } else if (currentMonth <= summerBegins) {\n      setSeason(\"spring\");\n    } else if (currentMonth <= autumnBegins) {\n      setSeason(\"summer\");\n    } else {\n      setSeason(\"autumn\");\n    }\n  };\n  var initializeColorMode = () => {\n    var localTimeHour = parseInt(moment().local().format(\"H\"));\n    setColorMode(localTimeHour > 6 && localTimeHour < 18 ? \"light\" : \"dark\");\n  };\n  var toggleColorMode = () => {\n    colorMode === \"light\" ? setColorMode('dark') : setColorMode('light');\n  };\n  var getTags = projects => {\n    tags = {\n      tools: {},\n      skills: {},\n      affiliations: {},\n      roles: {}\n    };\n    var blahProjects = projects;\n    if (Object.keys(allProjects).length) {\n      blahProjects = allProjects;\n    }\n    Object.keys(blahProjects).forEach(projectId => {\n      var project = blahProjects[projectId];\n      ['tools', 'skills', 'affiliations', 'roles'].forEach(tagType => {\n        // ['tools', 'affiliations'].forEach(tagType => {\n        // ['affiliations'].forEach(tagType => {\n        // debugger;\n        if (project[tagType]) {\n          project[tagType].forEach(projectTag => {\n            console.log(projects);\n            // debugger;\n            // if (projectTag in tags[tagType]) {\n            //   tags[tagType][projectTag]++;\n            // } else {\n            //   if (projects[projectId]) {\n            //     tags[tagType][projectTag] = 1;\n            //   } else {\n            //     tags[tagType][projectTag] = 0;\n            //   }\n            //   debugger;\n            // }\n            console.log(projectId);\n            // if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n            //   debugger;\n            // }\n\n            if (projects[projectId]) {\n              if (projectTag in tags[tagType]) {\n                tags[tagType][projectTag]++;\n              } else {\n                tags[tagType][projectTag] = 1;\n              }\n            } else {\n              // debugger;\n              if (!tags[tagType][projectTag]) {\n                // debugger;\n                tags[tagType][projectTag] = 0;\n              }\n              ;\n            }\n          });\n        }\n        ;\n      });\n    });\n    console.log(tags);\n    // debugger;\n    setTags({\n      ...tags\n    });\n  };\n  var getProjectsAndTags = () => {\n    var projectsListPath = `${process.env.PUBLIC_URL}/projects_list.json`;\n    fetch(projectsListPath).then(response => {\n      return response.json();\n    }).then(result => {\n      setAllProjects(result);\n      setProjects(result);\n      getTags(result);\n    }).catch(e => {\n      console.log(e.message);\n    });\n  };\n  var getProjectData = projId => {\n    var projPath = `${process.env.PUBLIC_URL}/projects/${projId}.json`;\n    fetch(projPath).then(response => {\n      return response.json();\n    }).then(result => {\n      setProjectData(result);\n    }).catch(e => {\n      console.log(e.message);\n    });\n  };\n  var updateProjectsList = activeTags => {\n    console.log(projects);\n    console.log(activeTags);\n    // // debugger;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(allProjects).map(projectPath => {\n          var tools = allProjects[projectPath].tools || [],\n            skills = allProjects[projectPath].skills || [],\n            affiliations = allProjects[projectPath].affiliations || [],\n            roles = allProjects[projectPath].roles || [],\n            tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n          projectsToDisplay = projectsToDisplay.filter(project => {\n            if (!projectsToIgnore.includes(project)) {\n              return project;\n            }\n          });\n        });\n      });\n      var blah = {};\n      projectsToDisplay.forEach(a => {\n        blah[a] = allProjects[a];\n      });\n      getTags(blah);\n      setProjects(blah);\n      // debugger;\n    } else {\n      getTags(allProjects);\n      setProjects(allProjects);\n    }\n  };\n  var displayProjects = tag => {\n    var updatedActiveTags = activeTags;\n    if (activeTags.includes(tag)) {\n      // // debugger;\n      // setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\n      updatedActiveTags = activeTags.filter(activeTag => activeTag !== tag);\n      setActiveTags(updatedActiveTags);\n      // // debugger;\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    } else {\n      // // debugger;\n      updatedActiveTags = activeTags.concat(tag);\n      setActiveTags(updatedActiveTags);\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    }\n    ;\n    console.log(activeTags);\n    // debugger;\n  };\n\n  var toggleFilterType = () => {\n    setFilterType(filterType === \"AND\" ? \"OR\" : \"AND\");\n    console.log(filterType);\n  };\n  var clearActiveTags = () => {\n    setActiveTags([]);\n    updateProjectsList([]);\n  };\n  var toggleAccordion = tagType => {\n    tagAccordions[tagType] = !tagAccordions[tagType];\n    setTagAccordions({\n      ...tagAccordions\n    });\n  };\n  var toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n  var orderChronologically = projects => {\n    var blah = {};\n    Object.keys(allProjects).map(a => {\n      blah[a] = allProjects[a].date;\n      console.log(allProjects[a].date);\n      // debugger;\n    });\n\n    var reverseChronYears = Array.from(new Set(Object.values(blah))).reverse();\n    console.log(\"reverseChronYears\");\n    console.log(reverseChronYears);\n    var orderedProjects = [];\n    reverseChronYears.forEach(year => {\n      Object.keys(projects).forEach(a => {\n        if (year === projects[a].date && !orderedProjects.includes(a)) {\n          orderedProjects.push(a);\n        }\n      });\n    });\n    return orderedProjects;\n  };\n  useEffect(() => {\n    getProjectsAndTags();\n    initializeSeason();\n    initializeColorMode();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: colorMode + \"-mode \" + season,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      activeImage: activeImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      colorMode: colorMode,\n      toggleColorMode: toggleColorMode,\n      isNavVisible: isNavVisible,\n      toggleNav: toggleNav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: \"true\",\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {\n          getProjectData: getProjectData,\n          projectData: projectData,\n          displayProjects: displayProjects,\n          projects: projects,\n          orderChronologically: orderChronologically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects\",\n        element: /*#__PURE__*/_jsxDEV(Projects, {\n          projects: projects,\n          tools: tags.tools,\n          skills: tags.skills,\n          affiliations: tags.affiliations,\n          roles: tags.roles\n          // tags={tags}\n          ,\n          toggleFilterType: toggleFilterType,\n          filterType: filterType,\n          activeTags: activeTags,\n          displayProjects: displayProjects,\n          clearActiveTags: clearActiveTags,\n          toggleAccordion: toggleAccordion,\n          orderChronologically: orderChronologically,\n          tagAccordions: tagAccordions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), Object.keys(projects).map((projectPath, i) => {\n        var path = \"/projects/\" + projectPath;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Content, {\n            projectPath: projectPath,\n            thumbnail: projects[projectPath].thumbnail,\n            data: projectData,\n            getProjectData: getProjectData,\n            title: projects[projectPath].title,\n            tags: {\n              tools: projects[projectPath].tools,\n              skills: projects[projectPath].skills,\n              affiliations: projects[projectPath].affiliations,\n              roles: projects[projectPath].roles\n            },\n            date: projects[projectPath].date,\n            type: \"project\",\n            orderChronologically: orderChronologically\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CA3tvNkv5Gj1hEx7wZVKWcsgmeE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","moment","Nav","Footer","Home","About","Projects","Content","Modal","React","require","useState","useEffect","App","tags","setTags","tools","skills","affiliations","roles","projects","setProjects","allProjects","setAllProjects","projectData","setProjectData","activeTags","setActiveTags","colorMode","setColorMode","season","setSeason","filterType","setFilterType","tagAccordions","setTagAccordions","isNavVisible","setNavVisibility","activeImage","setActiveImage","initializeSeason","springBegins","summerBegins","autumnBegins","currentMonth","month","initializeColorMode","localTimeHour","parseInt","local","format","toggleColorMode","getTags","blahProjects","Object","keys","length","forEach","projectId","project","tagType","projectTag","console","log","getProjectsAndTags","projectsListPath","process","env","PUBLIC_URL","fetch","then","response","json","result","catch","e","message","getProjectData","projId","projPath","updateProjectsList","activeTagProjectsList","activeTagProjectsSet","Set","projectsToDisplay","ignoredProjectsSet","ignoredProjectsList","projectsToIgnore","tag","map","projectPath","concat","includes","add","Array","from","filter","blah","a","displayProjects","updatedActiveTags","activeTag","toggleFilterType","clearActiveTags","toggleAccordion","toggleNav","orderChronologically","date","reverseChronYears","values","reverse","orderedProjects","year","push","i","path","thumbnail","title"],"sources":["/Users/heidi.slojewski/Desktop/portfolio/src/App.js"],"sourcesContent":["import { Routes, Route } from \"react-router-dom\";\nimport moment from 'moment';\n\nimport './App.scss';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport Content from './Content';\nimport Modal from './Modal';\n\nconst React = require('react'),\n      { useState, useEffect } = require('react');\n\nconst App = () => {\n  var [tags, setTags] = useState({ tools: {}, skills: {}, affiliations: {}, roles: {} });\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [activeTags, setActiveTags] = useState([]);\n  const [colorMode, setColorMode] = useState(\"light\");\n  const [season, setSeason] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"AND\");\n  const [tagAccordions, setTagAccordions] = useState({tools: false, skills: false, affiliations: false, roles: false});\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [activeImage, setActiveImage] = useState(\"\");\n\n\n  var initializeSeason = () => {\n    // // debugger;\n    // const date = new Date('2017-4-28');\n    // const start = new Date('2017-4-20');\n    // const end = new Date('2017-5-16');\n    const springBegins = 2; // March\n    const summerBegins = 4; // May\n    const autumnBegins = 6; // July\n    // const winterBegins = 11;\n    // console.log(\"month: \"+moment().month());\n\n    const currentMonth = moment().month();\n    if (currentMonth <= springBegins) {\n      setSeason(\"winter\");\n    } else if (currentMonth <= summerBegins) {\n      setSeason(\"spring\");\n    } else if (currentMonth <= autumnBegins) {\n      setSeason(\"summer\");\n    } else {\n      setSeason(\"autumn\");\n    }\n  }\n\n  var initializeColorMode = () => {\n    var localTimeHour = parseInt(moment().local().format(\"H\"));\n    setColorMode((localTimeHour > 6 && localTimeHour < 18) ? \"light\" : \"dark\");\n  }\n\n  var toggleColorMode = () => {\n    colorMode === \"light\" ? setColorMode('dark') : setColorMode('light');\n  }\n  \n  var getTags = (projects) => {\n    tags = { tools: {}, skills: {}, affiliations: {}, roles: {} };\n    var blahProjects = projects;\n    if (Object.keys(allProjects).length) {\n      blahProjects = allProjects;\n    }\n    Object.keys(blahProjects).forEach(projectId => {\n      var project = blahProjects[projectId];\n      ['tools', 'skills', 'affiliations', 'roles'].forEach(tagType => {\n      // ['tools', 'affiliations'].forEach(tagType => {\n      // ['affiliations'].forEach(tagType => {\n        // debugger;\n        if (project[tagType]) {\n          project[tagType].forEach(projectTag => {\n            console.log(projects);\n            // debugger;\n            // if (projectTag in tags[tagType]) {\n            //   tags[tagType][projectTag]++;\n            // } else {\n            //   if (projects[projectId]) {\n            //     tags[tagType][projectTag] = 1;\n            //   } else {\n            //     tags[tagType][projectTag] = 0;\n            //   }\n            //   debugger;\n            // }\n            console.log(projectId);\n            // if (projectTag === \"DePaul University\" && projectId === \"health-activity-infographic\") {\n            //   debugger;\n            // }\n\n            if (projects[projectId]) {\n              if (projectTag in tags[tagType]) {\n                tags[tagType][projectTag]++;\n              } else {\n                tags[tagType][projectTag] = 1;\n              }\n            } else {\n              // debugger;\n              if (!tags[tagType][projectTag]) {\n                // debugger;\n                tags[tagType][projectTag] = 0;\n              };\n            }\n          });\n        };\n      });\n    });\n    console.log(tags);\n    // debugger;\n    setTags({...tags});\n  }\n\n  var getProjectsAndTags = () => {\n    var projectsListPath = `${process.env.PUBLIC_URL}/projects_list.json`;\n    fetch(projectsListPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setAllProjects(result);\n          setProjects(result);\n          getTags(result);\n      }).catch((e: Error) => {\n        console.log(e.message);\n      });\n  }\n\n  var getProjectData = (projId) => {\n    var projPath = `${process.env.PUBLIC_URL}/projects/${projId}.json`;\n    fetch(projPath)\n      .then(response => {\n        return response.json();\n      }).then(result => {\n          setProjectData(result);\n      }).catch((e: Error) => {\n        console.log(e.message);\n      });\n  }\n\n  var updateProjectsList = (activeTags) => {\n    console.log(projects);\n    console.log(activeTags);\n    // // debugger;\n    var activeTagProjectsList = [];\n    var activeTagProjectsSet = new Set();\n    var projectsToDisplay = [];\n    var ignoredProjectsSet = new Set();\n    var ignoredProjectsList = [];\n    var projectsToIgnore = [];\n    if (activeTags.length) {\n      activeTags.forEach(tag => {\n        Object.keys(allProjects).map(projectPath => {\n          var tools = allProjects[projectPath].tools || [],\n              skills = allProjects[projectPath].skills || [],\n              affiliations = allProjects[projectPath].affiliations || [],\n              roles = allProjects[projectPath].roles || [],\n              tags = tools.concat(skills).concat(affiliations).concat(roles);\n          if (tags.includes(tag)) {\n            activeTagProjectsSet.add(projectPath);\n            activeTagProjectsList = Array.from(activeTagProjectsSet);\n            projectsToDisplay = activeTagProjectsList;\n          } else {\n            ignoredProjectsSet.add(projectPath);\n            ignoredProjectsList = Array.from(ignoredProjectsSet);\n            projectsToIgnore = ignoredProjectsList;\n          }\n          projectsToDisplay = projectsToDisplay.filter(project => {\n            if (!projectsToIgnore.includes(project)) {\n              return project;\n            }\n          });\n        });\n      })\n      var blah = {};\n      projectsToDisplay.forEach(a => {\n        blah[a] = allProjects[a];\n      })\n      getTags(blah);\n      setProjects(blah);\n      // debugger;\n    } else {\n      getTags(allProjects);\n      setProjects(allProjects);\n    }\n  }\n\n  var displayProjects = (tag) => {\n    var updatedActiveTags = activeTags;\n    if (activeTags.includes(tag)) {\n      // // debugger;\n      // setActiveTags(activeTags.filter(activeTag => activeTag !== tag));\n      updatedActiveTags = activeTags.filter(activeTag => activeTag !== tag);\n      setActiveTags(updatedActiveTags);\n      // // debugger;\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    } else {\n      // // debugger;\n      updatedActiveTags = activeTags.concat(tag);\n      setActiveTags(updatedActiveTags);\n      // getTags(projects);\n      updateProjectsList(updatedActiveTags);\n    };\n    console.log(activeTags);\n    // debugger;\n  }\n\n  var toggleFilterType = () => {\n    setFilterType(filterType === \"AND\" ? \"OR\" : \"AND\");\n    console.log(filterType);\n  }\n\n  var clearActiveTags = () => {\n    setActiveTags([]);\n    updateProjectsList([]);\n  }\n\n  var toggleAccordion = (tagType) => {\n    tagAccordions[tagType] = !tagAccordions[tagType];\n    setTagAccordions({...tagAccordions});\n  }\n\n  var toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  }\n\n  var orderChronologically = (projects) => {\n    var blah = {};\n    Object.keys(allProjects).map(a => {\n      blah[a] = allProjects[a].date;\n      console.log(allProjects[a].date);\n      // debugger;\n    });\n    var reverseChronYears = Array.from(new Set(Object.values(blah))).reverse();\n    console.log(\"reverseChronYears\");\n    console.log(reverseChronYears);\n    var orderedProjects = [];\n    reverseChronYears.forEach(year => {\n      Object.keys(projects).forEach(a => {\n        if (year === projects[a].date && !orderedProjects.includes(a)) {\n          orderedProjects.push(a);\n        }\n      })\n    });\n    return orderedProjects;\n  }\n\n  useEffect(() => {\n    getProjectsAndTags();\n    initializeSeason();\n    initializeColorMode();\n  }, [])\n  \n  return (\n    <div className={colorMode + \"-mode \" + season}>\n      <Modal activeImage={activeImage} />\n      <Nav\n        colorMode={colorMode}\n        toggleColorMode={toggleColorMode}\n        isNavVisible={isNavVisible}\n        toggleNav={toggleNav}\n      />\n      <Routes>\n        <Route exact=\"true\" path=\"/\" element={<Home />} />\n        <Route path=\"/about\"\n               element={\n                <About\n                  getProjectData={getProjectData}\n                  projectData={projectData}\n                  displayProjects={displayProjects}\n                  projects={projects}\n                  orderChronologically={orderChronologically}\n                />\n               }\n        />\n        <Route path=\"/projects\"\n               element={\n                <Projects\n                  projects={projects}\n                  tools={tags.tools}\n                  skills={tags.skills}\n                  affiliations={tags.affiliations}\n                  roles={tags.roles}\n                  // tags={tags}\n                  toggleFilterType={toggleFilterType}\n                  filterType={filterType}\n                  activeTags={activeTags}\n                  displayProjects={displayProjects}\n                  clearActiveTags={clearActiveTags}\n                  toggleAccordion={toggleAccordion}\n                  orderChronologically={orderChronologically}\n                  tagAccordions={tagAccordions}\n                />\n              }\n        />\n        {Object.keys(projects).map((projectPath, i) => {\n          var path = \"/projects/\" + projectPath;\n          return (\n            <Route path={path}\n                   key={i} \n                   element={\n                    <Content\n                      projectPath={projectPath}\n                      thumbnail={projects[projectPath].thumbnail}\n                      data={projectData}\n                      getProjectData={getProjectData}\n                      title={projects[projectPath].title}\n                      tags={{\n                        tools: projects[projectPath].tools,\n                        skills: projects[projectPath].skills,\n                        affiliations: projects[projectPath].affiliations,\n                        roles: projects[projectPath].roles\n                      }}\n                      date={projects[projectPath].date}\n                      type=\"project\"\n                      orderChronologically={orderChronologically}\n                    />\n                    }\n              />\n          );\n        })}\n        {/* {tools.concat(skills).concat(affiliations).map((tag, i) => {\n          var path = \"/tags/\" + tag;\n          return (\n            <Route path={path} key={i} \n                    element={<Tag projects={projects}\n                                  tag={tag}\n                            />}\n            />\n          );\n        })} */}\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}